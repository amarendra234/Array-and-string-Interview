class Solution {
public:
    vector<int> findOriginalArray(vector<int>& changed) {
        vector<int>odd;
        vector<int>ans;
        if(changed.size()%2!=0){
            return {};
        }
        int a[100001];
        for(int i=0;i<100001;i++){
            a[i]=0;
        }
        for(int i=0;i<changed.size();i++){
            if(changed[i]%2==0){
                a[changed[i]]++;
            }else{
                odd.push_back(changed[i]);
            }
        }
        for(int i=0;i<odd.size();i++){
             if(2*odd[i]>100000){
                return {};
             }else{
                a[2*odd[i]]--;
                ans.push_back(odd[i]);
             }
        }
        for(int i=0;i<100001;i++){
            if(a[i]<0 or (a[i]!=0 and i*2>100000)){
                return {};
            }else if(a[i]>0){
                while(a[i]>0){
                    ans.push_back(i);
                    a[2*i]--;
                    a[i]--;
                }
            }
        }
        return ans;
    }
};
